# 283. Move Zeroes

# Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

# Note that you must do this in-place without making a copy of the array.

# Example 1:

# Input: nums = [0,1,0,3,12]
# Output: [1,3,12,0,0]
# Example 2:

# Input: nums = [0]
# Output: [0]
 
# Constraints:

# 1 <= nums.length <= 104
# -231 <= nums[i] <= 231 - 1
 
# Follow up: Could you minimize the total number of operations done?
class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        if nums is None or len(nums) == 1:
          return nums
        slw = 0
        for fst in range(len(nums)):
          if nums[fst] != 0:
            nums[fst], nums[slw] = nums[slw], nums[fst]
            slw += 1
        return nums

s = Solution()
print(s.moveZeroes([0,1,0,3,12]))
print(s.moveZeroes([0]))
print(s.moveZeroes([0,0]))
