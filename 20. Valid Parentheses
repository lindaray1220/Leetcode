# 20. Valid Parentheses

# Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

# An input string is valid if:

# Open brackets must be closed by the same type of brackets.
# Open brackets must be closed in the correct order.
 
# Example 1:

# Input: s = "()"
# Output: true
# Example 2:

# Input: s = "()[]{}"
# Output: true
# Example 3:

# Input: s = "(]"
# Output: false
# Example 4:

# Input: s = "([)]"
# Output: false
# Example 5:

# Input: s = "{[]}"
# Output: true
 
# Constraints:

# 1 <= s.length <= 104
# s consists of parentheses only '()[]{}'.
class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        if not s:
            return True
        matches = {'(':')', '[':']', '{':'}'}
        left = []
        for p in s:
            if p in matches:
                left.append(p)
            elif not left or matches[left[-1]] != p:
                return False
            else:
                left.pop()
        return not left
