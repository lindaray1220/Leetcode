# 162. Find Peak Element

# A peak element is an element that is strictly greater than its neighbors.

# Given an integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks.

# You may imagine that nums[-1] = nums[n] = -âˆž.

 

# Example 1:

# Input: nums = [1,2,3,1]
# Output: 2
# Explanation: 3 is a peak element and your function should return the index number 2.
# Example 2:

# Input: nums = [1,2,1,3,5,6,4]
# Output: 5
# Explanation: Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.
 

# Constraints:

# 1 <= nums.length <= 1000
# -231 <= nums[i] <= 231 - 1
# nums[i] != nums[i + 1] for all valid i.

class Solution(object):
    def findPeakElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
# Approach 1: Linear Scan
        # for i in range(1, len(nums)-1):
        #     if nums[i-1] < nums[i] and nums[i] > nums[i+1]:
        #         return i
        # if nums[0] < nums[-1]:
        #     return len(nums)-1
        # else:
        #     return 0
#Time: O(N) / Space: O(1)

# Approach 2: Recursive Binary Search
        return self.Search(nums, 0, len(nums)-1)

    def Search(self, nums, l, r):
        if l == r:
            return l
        m = (l+r)//2
        if nums[m] > nums[m+1]:
            return self.Search(nums, l, m)
        return self.Search(nums, m+1, r)

# Approach 3: Iterative Binary Search
        # l, r = 0, len(nums)-1
        # while l< r:
        #     m = l+(r-l)//2
        #     if nums[m] > nums[m+1]:
        #         r = m
        #     else:
        #         l = m+1
        # return l
#Time: O(log(N)) / Space: O(1)
# This code is contributed by 
# Smitha Dinesh Semwal

s = Solution()
print(s.findPeakElement([1,2,1,3,5,6,4]))
print('***************************')
print(s.findPeakElement([1,2,3,1]))
print('***************************')
print(s.findPeakElement([1,2,3,4]))
print('***************************')
print(s.findPeakElement([4,3,2,1]))
print('***************************')
print(s.findPeakElement([5,1,2,4]))
